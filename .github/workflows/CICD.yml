name: CICD Pipeline
on:
  # workflow_run:
  #   workflows: [Scheduled Pipeline]
  #   types:
  #     - completed
  #   branches:
  #     - feature/cicd-pipeline
  push:
    branches:
      - feature/cicd-pipeline
jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
#     - name: Set up Python
#        uses: actions/setup-python@v2
#        with:
#          python-version: '3.x'
#
#      - name: Install dependencies
#        run: |
#          python -m pip install --upgrade pip
#          pip install -r requirements.txt
      ## Installing doctl to interact with digitalocean services
      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: dop_v1_aba381240fbbb6ff885304ce6b66e5de6b5d9aca00f9870bb251a1103f716ad0
      - name: Build Docker container
        run: |
          docker build -t my-cicd-pipeline:latest .
          echo 'dop_v1_aba381240fbbb6ff885304ce6b66e5de6b5d9aca00f9870bb251a1103f716ad0' | docker login -u 'olafmajoor@hotmail.com' --password-stdin registry.digitalocean.com
          docker tag my-cicd-pipeline registry.digitalocean.com/container-weerwijzer/my-cicd-pipeline
          docker image push registry.digitalocean.com/container-weerwijzer/my-cicd-pipeline



###
#      ## Build docker image and pushing to digitalocean
#      - name: Build container image
#        run: docker build -t ${{ secrets.REGISTRY_NAME }}/python-example:$(echo $GITHUB_SHA | head -c7) .
#
#      - name: Log in to DigitalOcean Container Registry with short-lived credentials
#        run: doctl registry login --expiry-seconds 1200
#
#      - name: Push image to DigitalOcean Container Registry
#        run: docker push ${{ secrets.REGISTRY_NAME }}/python-example:$(echo $GITHUB_SHA | head -c7)
      ## Deploying to kubernetes cluster
#      - name: Update deployment file
#        run: TAG=$(echo $GITHUB_SHA | head -c7) && sed -i 's|<IMAGE>|${{ secrets.REGISTRY_NAME }}/python-example:'${TAG}'|' $GITHUB_WORKSPACE/config/deployment.yml
#
#      - name: Save DigitalOcean kubeconfig with short-lived credentials
#        run: doctl kubernetes cluster kubeconfig save --expiry-seconds 600 ${{ secrets.CLUSTER_NAME }}
#
#      - name: Deploy to DigitalOcean Kubernetes
#        run: kubectl apply -f $GITHUB_WORKSPACE/config/deployment.yml
#
#      - name: Verify deployment
#        run: kubectl rollout status deployment/python-example

