name: test_deployment

on:
  push:
    branches:
      - feature/terraform

  workflow_dispatch:

env:
  REGISTRY: "registry.digitalocean.com/wiwa1978-registry-wim"
  IMAGE_NAME: "flask-app-wim"

jobs:
  build_and_push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout files
        uses: actions/checkout@v2

      - name: Build container image latest version
        run: docker build -t $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7) .

      - name: Install doctl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}

      - name: Log in to DigitalOcean Container Registry with short-lived credentials
        run: doctl registry login --expiry-seconds 600

      - name: Push image to DigitalOcean Container Registry
        run: docker push $(echo $REGISTRY)/$(echo $IMAGE_NAME):$(echo $GITHUB_SHA | head -c7)

  deploy:
    runs-on: ubuntu-latest
    needs: build_and_push
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Configure kubectl
        uses: digitalocean/action-doctl@v2
        with:
          token: ${{ secrets.DIGITALOCEAN_ACCESS_TOKEN }}
          cmd-run: |
            doctl kubernetes cluster kubeconfig save <your-cluster-name>

      - name: Deploy to Kubernetes
        uses: digitalocean/kubernetes-deploy@v1
        with:
          kube_config: ${{ env.HOME }}/.kube/config
          manifests: |
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: your-app
              namespace: default
              labels:
                app: your-app
            spec:
              replicas: 1
              selector:
                matchLabels:
                  app: your-app
              template:
                metadata:
                  labels:
                    app: your-app
                spec:
                  containers:
                  - name: your-app
                    image: registry.digitalocean.com/your-image:${{ github.sha }}
                    ports:
                    - containerPort: 5000
